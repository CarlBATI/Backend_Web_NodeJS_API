#+title: Backlog

* [0/1] Concept
** IDEA QoL API: Quality of Life API
This API aims to provide a comprehensive suite of text-based services designed to assist with various aspects of daily life management. It will offer functionalities such as note-taking, tagging for organization, and source referencing. This will enable users to keep track of important information, categorize it effectively, and reference the original sources, all in one place. The goal is to enhance productivity and make life management more streamlined and efficient.
* DONE Initialize NodeJS Project
* TODO Setup Environment
** [X] Dotenv ~.env~
*** [X] DB Variables
*** [X] Host and Port
** [X] Make ~app.js~
** [X] Make npm script ~start~
* [X] Database
** [ ] Create ERD
#+begin_src plantuml
@startuml
skinparam dpi 300
entity "Notes" as N {
        ,* title
        +created_at
        +modified_at
        content
        ~user
}

entity "Color" as C {
        ,* name
}

entity "Tags" as T {
        ,* tag,
}

entity "Sources" as S {
        ,* source
        title
}


entity "TrainingSet" as TS {
        ,* date,
        ,* reps
        ,* weight
        ,* rpe/rir
        performed_at
        note
}


entity "TrainingTags" as TT {
        ,*tag
        ,* color
}

N}o--o{N
C||--o{T
N}o--o{T
N}o--o{S

TS}o--o{TT
@enduml
#+end_src

#+RESULTS:
[[file:/tmp/babel-NGp4Ir/plantuml-0dfRJg.png]]

** [X] Create Batabase
#+begin_src sql
CREATE DATABASE backend_web_nodejs_api;
#+end_src
** [X] Create User
#+begin_src sql
CREATE USER 'backend_web_nodejs'@'localhost' IDENTIFIED BY 'HWMhVsmkoGnD8Bs8yqJh';
#+end_src
** [X] Grant Privileges
#+begin_src sql
GRANT ALL PRIVILEGES ON backend_web_nodejs_api.* TO 'backend_web_nodejs'@'localhost';

FLUSH PRIVILEGES;
#+end_src
** [X] SetupMariaDB Connector: ~/database/connection.js~
*** [X] Test Connection
** [ ] Setup Migration Tool
Opted for Knex.js (~knex~) with ~mysql~ driver.
*** [ ] Create Migrations
**** [ ] Table Notes
**** [ ] Table Tags
* [ ] Write README.md
* [ ] CRUD Interfaces
** [X] Make First Route: ~routes/notes.js~ POST
Works: uses services/notesService
Route: routes/notesRouter.js
** [X] Set Up Testing
- Using ~jest~ as testing framework
- Using ~upertest~
*** [X] Run First Test: ~routes/notes.js~ POST
** [ ] 1 Notes API CRUD Interface
*** [X] POST /api/notes: Create
**** [X] Create Route
**** [X] Create Service
**** [X] Create Test
**** [X] Test Success
*** [X] GET /api/notes and /api/notes/{id}: Read
**** [X] Create Route
**** [X] Create Service
**** [X] Create Test
**** [X] Test Success
*** [X] PUT /api/notes and /api/notes/{id}: Update
**** [X] Create Route
**** [X] Create Service
**** [X] Create Test
**** [X] Test Success
*** [ ] DELETE /api/notes: Delete
**** [ ] Create Route
**** [ ] Create Service
**** [ ] Create Test
**** [ ] Test Success
** [ ] 2
